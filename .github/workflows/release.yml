name: Release on Push to Main

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.23'

      - name: Run Tests
        run: go test ./...

      - name: Determine Next Version
        id: vars
        run: |
          # Get the latest tag
          latest_tag=$(git describe --tags --abbrev=0)
          echo "Latest tag: $latest_tag"
          # Extract the version number
          if [[ $latest_tag =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
            echo "Current version: $major.$minor.$patch"
            # Increment the patch version
            patch=$((patch + 1))
            new_version="v$major.$minor.$patch"
            echo "New version: $new_version"
          else
            # If no valid tag exists, start at v0.1.0
            new_version="v0.1.0"
            echo "No valid tag found. Starting at $new_version"
          fi
          echo "::set-output name=new_version::$new_version"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.vars.outputs.new_version }}
          name: Release ${{ steps.vars.outputs.new_version }}
          body: |
            ## What's Changed
            - Automated release from push to main branch.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push New Tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.vars.outputs.new_version }}
          git push origin ${{ steps.vars.outputs.new_version }}
